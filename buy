// ==UserScript==
// @name         pia buy
// @namespace    http://tampermonkey.net/
// @version      2024-09-10
// @description  try to take over the world!
// @author       You
// @match        https://sell.pia.jp/inbound/selectTicket.php?eventCd=*
// @match        https://sell.pia.jp/inbound/selectTicket.php?action=*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=pia.jp
// @updateURL    https://raw.githubusercontent.com/bfdissfho/mypia/main/buy
// @downloadURL  https://raw.githubusercontent.com/bfdissfho/mypia/main/buy
// @grant        none
// ==/UserScript==

(function() {

    var want_quan = "4";

    function refresh() {
        let exist_element = document.querySelector(".titleBar");
        if (exist_element) {
            clearInterval(check_element);
            // Call the functions after clearing the interval
            setTimeout(select_date, 100);
            setTimeout(selectRandomStockItem, 100);
            setTimeout(select_quan, 100);
        } else {
            location.reload();
        }
    }

    function select_date() {
        let selectdate = document.getElementById('insPerformCode');
        if (selectdate) {
            const options = Array.from(selectdate.options).filter(option => option.value); // Filter out empty value options
            if (options.length > 0) { // Ensure there are valid options
                // Generate a random index between 0 and options.length - 1
                const randomIndex = Math.floor(Math.random() * options.length);
                selectdate.selectedIndex = selectdate.options.selectedIndex === 0 ? randomIndex + 1 : randomIndex; // Adjust if the first option is selected
                const changeEvent = new Event('change', { bubbles: true });
                selectdate.dispatchEvent(changeEvent);
            }
        }
    }

    function click_next() {
        let next_btn = document.getElementById('linkNext');
        let selectdate = document.getElementById('insPerformCode');
        let clickEvent = new MouseEvent('click', {
            bubbles: true,
            cancelable: true,
            view: window
        });
        if (next_btn && selectdate) {
            console.log("123");
            next_btn.dispatchEvent(clickEvent);
        }
    }

    function selectRandomStockItem() {
        var targetNode = document.querySelector('body');
        var observer = new MutationObserver(function(mutationsList, observer) {
            for (var mutation of mutationsList) {
                if (mutation.type === 'childList') {
                    var stockItems = document.querySelectorAll(
                        'input[type="radio"][name="insStockSK"]:not([disabled])'
                    );

                    if (stockItems.length) {
                        // Filter stock items to ensure they meet both conditions
                        var validStockItems = Array.from(stockItems).filter(stockItem => {
                            var stockItemImage = stockItem.previousElementSibling;
                            var stockItemLabel = stockItem.closest('label'); // Get the closest label
                            return !(stockItemImage && stockItemImage.tagName === 'IMG' && stockItemImage.alt === 'stock exists') &&
                                stockItemLabel &&
                                !stockItemLabel.textContent.includes('GOLD BOX');
                        });

                        // Randomly select a stock item from the valid items
                        if (validStockItems.length > 0) {
                            var randomIndex = Math.floor(Math.random() * validStockItems.length);
                            var randomStockItem = validStockItems[randomIndex];
                            randomStockItem.checked = true;

                            var clickEvent = new MouseEvent('click', {
                                view: window,
                                bubbles: true,
                                cancelable: true,
                            });
                            randomStockItem.dispatchEvent(clickEvent);
                            observer.disconnect();
                        }
                    }
                }
            }
        });

        var observerConfig = { childList: true, subtree: true };
        observer.observe(targetNode, observerConfig);
    }

    function select_quan() {
        var targetNode = document.querySelector('body');
        var observer = new MutationObserver(function(mutationsList, observer) {
            for (var mutation of mutationsList) {
                if (mutation.type === 'childList') {
                    var quan = document.querySelector('select[name*="insSaleSK"]');
                    if (quan) {
                        quan.value = want_quan;
                        var clickEvent = new MouseEvent('click', {
                            view: window,
                            bubbles: true,
                            cancelable: true,
                        });
                        quan.dispatchEvent(clickEvent);
                        observer.disconnect();
                        click_next();
                    }
                }
            }
        });
        var observerConfig = { childList: true, subtree: true };
        observer.observe(targetNode, observerConfig);
    }

    const check_element = setInterval(refresh, 2000);
})();
