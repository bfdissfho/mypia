// ==UserScript==
// @name         pia sumo wrestling
// @namespace    http://tampermonkey.net/
// @version      2024-02-11
// @description  try to take over the world!
// @author       You
// @match        https://sell.pia.jp/inbound/selectTicket.php?eventCd=*
// @match        https://sell.pia.jp/inbound/selectTicket.php?action=*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=pia.jp
// @grant        none
// ==/UserScript==

(function() {
    'use strict';
    var want_date = 1
    var want_quan = "6"

    function select_date() {
        let selectdate = document.getElementById('insPerformCode');
        if (selectdate) {
            const options = selectdate.options;
            if (want_date >= 0 && want_date < options.length) {
                selectdate.selectedIndex = want_date;

                // Dispatch the change event using different methods
                if ('createEvent' in document) {
                    const changeEvent = document.createEvent('Event');
                    changeEvent.initEvent('change', true, true);
                    selectdate.dispatchEvent(changeEvent);
                }
            }
        }
    }

    function click_next(){
        let next_btn = document.getElementById('linkNext');
        let selectdate = document.getElementById('insPerformCode');
        let clickEvent = new MouseEvent('click', {
            bubbles: true,
            cancelable: true,
            view: window
        });
        if (next_btn && selectdate) {
            console.log("123")
            next_btn.dispatchEvent(clickEvent);
        }
    }

    // Function to select the last available stock item (excluding disabled and "It remains and small")
    function selectLastStockItem() {
        var targetNode = document.querySelector('body'); // Select the appropriate target node

        var observer = new MutationObserver(function (mutationsList, observer) {
            // Check for the desired stock item when mutations occur
            for (var mutation of mutationsList) {
                if (mutation.type === 'childList') {
                    var stockItems = document.querySelectorAll(
                        'input[type="radio"][name="insStockSK"]:not([disabled])'
                    );
                    if (stockItems){
                        var lastStockItem = null;

                        for (var i = stockItems.length - 1; i >= 0; i--) {
                            var stockItem = stockItems[i];
                            var stockItemImage = stockItem.previousElementSibling;

                            if (
                                stockItemImage &&
                                stockItemImage.tagName === 'IMG' &&
                                stockItemImage.alt !== 'stock exists'
                            ) {
                                continue; // Skip "It remains and small" stock items
                            }

                            lastStockItem = stockItem;
                            break;
                        }

                        if (lastStockItem) {
                            lastStockItem.checked = true;
                            console.log("111");

                            // Create a new change event
                            var clickEvent = new MouseEvent('click', {
                                view: window,
                                bubbles: true,
                                cancelable: true,
                            });

                            // Dispatch the change event on the last stock item
                            lastStockItem.dispatchEvent(clickEvent);

                            observer.disconnect(); // Stop observing once the stock item is selected
                        }
                    }
                }
            }
        });

        var observerConfig = { childList: true, subtree: true };
        observer.observe(targetNode, observerConfig);
    }


    // Function to click the next label
    function clickNextLabel() {
        var nextLabelButton = document.getElementById('next-label-button'); // Replace 'next-label-button' with the ID or selector of your next label button
        nextLabelButton.click();
    }

    function select_quan() {
        var targetNode = document.querySelector('body'); // Select the appropriate target node

        var observer = new MutationObserver(function (mutationsList, observer) {
            // Check for the select element when mutations occur
            for (var mutation of mutationsList) {
                if (mutation.type === 'childList') {
                    var quan = document.querySelector('select[name*="insSaleSK"]');
                    if (quan) {
                        quan.value = want_quan;

                        // Create a new MouseEvent with the appropriate properties
                        var clickEvent = new MouseEvent('click', {
                            view: window,
                            bubbles: true,
                            cancelable: true,
                        });

                        // Dispatch the click event on the select element
                        quan.dispatchEvent(clickEvent);

                        observer.disconnect(); // Stop observing once the select element is found and updated
                        click_next();
                    }
                }
            }
        });

        var observerConfig = { childList: true, subtree: true };
        observer.observe(targetNode, observerConfig);

    }

    setTimeout(select_date, 100);
    setTimeout(selectLastStockItem, 100);
    setTimeout(select_quan, 100);
    //setTimeout(click_next, 3500);



})();
